# Generated from MyLang.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,36,227,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,
        1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,
        1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,
        1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,
        3,9,130,8,9,1,10,4,10,133,8,10,11,10,12,10,134,1,11,4,11,138,8,11,
        11,11,12,11,139,1,11,1,11,4,11,144,8,11,11,11,12,11,145,1,12,1,12,
        1,12,1,12,5,12,152,8,12,10,12,12,12,155,9,12,1,12,1,12,1,13,1,13,
        5,13,161,8,13,10,13,12,13,164,9,13,1,14,4,14,167,8,14,11,14,12,14,
        168,1,14,1,14,1,15,1,15,1,15,1,15,5,15,177,8,15,10,15,12,15,180,
        9,15,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,
        1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,25,1,25,1,26,
        1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,
        1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,0,0,36,1,1,3,2,5,3,7,4,9,
        5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
        33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
        55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,1,0,6,1,0,
        48,57,2,0,34,34,92,92,2,0,65,90,97,122,3,0,48,57,65,90,97,122,3,
        0,9,10,13,13,32,32,2,0,10,10,13,13,235,0,1,1,0,0,0,0,3,1,0,0,0,0,
        5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
        1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
        1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,
        1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
        1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
        1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,
        1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,1,73,1,0,0,0,3,78,
        1,0,0,0,5,84,1,0,0,0,7,87,1,0,0,0,9,92,1,0,0,0,11,98,1,0,0,0,13,
        102,1,0,0,0,15,108,1,0,0,0,17,113,1,0,0,0,19,129,1,0,0,0,21,132,
        1,0,0,0,23,137,1,0,0,0,25,147,1,0,0,0,27,158,1,0,0,0,29,166,1,0,
        0,0,31,172,1,0,0,0,33,183,1,0,0,0,35,185,1,0,0,0,37,187,1,0,0,0,
        39,189,1,0,0,0,41,191,1,0,0,0,43,193,1,0,0,0,45,195,1,0,0,0,47,198,
        1,0,0,0,49,201,1,0,0,0,51,203,1,0,0,0,53,205,1,0,0,0,55,208,1,0,
        0,0,57,211,1,0,0,0,59,213,1,0,0,0,61,215,1,0,0,0,63,217,1,0,0,0,
        65,219,1,0,0,0,67,221,1,0,0,0,69,223,1,0,0,0,71,225,1,0,0,0,73,74,
        5,114,0,0,74,75,5,101,0,0,75,76,5,97,0,0,76,77,5,100,0,0,77,2,1,
        0,0,0,78,79,5,119,0,0,79,80,5,114,0,0,80,81,5,105,0,0,81,82,5,116,
        0,0,82,83,5,101,0,0,83,4,1,0,0,0,84,85,5,105,0,0,85,86,5,102,0,0,
        86,6,1,0,0,0,87,88,5,101,0,0,88,89,5,108,0,0,89,90,5,115,0,0,90,
        91,5,101,0,0,91,8,1,0,0,0,92,93,5,119,0,0,93,94,5,104,0,0,94,95,
        5,105,0,0,95,96,5,108,0,0,96,97,5,101,0,0,97,10,1,0,0,0,98,99,5,
        105,0,0,99,100,5,110,0,0,100,101,5,116,0,0,101,12,1,0,0,0,102,103,
        5,102,0,0,103,104,5,108,0,0,104,105,5,111,0,0,105,106,5,97,0,0,106,
        107,5,116,0,0,107,14,1,0,0,0,108,109,5,98,0,0,109,110,5,111,0,0,
        110,111,5,111,0,0,111,112,5,108,0,0,112,16,1,0,0,0,113,114,5,115,
        0,0,114,115,5,116,0,0,115,116,5,114,0,0,116,117,5,105,0,0,117,118,
        5,110,0,0,118,119,5,103,0,0,119,18,1,0,0,0,120,121,5,116,0,0,121,
        122,5,114,0,0,122,123,5,117,0,0,123,130,5,101,0,0,124,125,5,102,
        0,0,125,126,5,97,0,0,126,127,5,108,0,0,127,128,5,115,0,0,128,130,
        5,101,0,0,129,120,1,0,0,0,129,124,1,0,0,0,130,20,1,0,0,0,131,133,
        7,0,0,0,132,131,1,0,0,0,133,134,1,0,0,0,134,132,1,0,0,0,134,135,
        1,0,0,0,135,22,1,0,0,0,136,138,7,0,0,0,137,136,1,0,0,0,138,139,1,
        0,0,0,139,137,1,0,0,0,139,140,1,0,0,0,140,141,1,0,0,0,141,143,5,
        46,0,0,142,144,7,0,0,0,143,142,1,0,0,0,144,145,1,0,0,0,145,143,1,
        0,0,0,145,146,1,0,0,0,146,24,1,0,0,0,147,153,5,34,0,0,148,152,8,
        1,0,0,149,150,5,92,0,0,150,152,9,0,0,0,151,148,1,0,0,0,151,149,1,
        0,0,0,152,155,1,0,0,0,153,151,1,0,0,0,153,154,1,0,0,0,154,156,1,
        0,0,0,155,153,1,0,0,0,156,157,5,34,0,0,157,26,1,0,0,0,158,162,7,
        2,0,0,159,161,7,3,0,0,160,159,1,0,0,0,161,164,1,0,0,0,162,160,1,
        0,0,0,162,163,1,0,0,0,163,28,1,0,0,0,164,162,1,0,0,0,165,167,7,4,
        0,0,166,165,1,0,0,0,167,168,1,0,0,0,168,166,1,0,0,0,168,169,1,0,
        0,0,169,170,1,0,0,0,170,171,6,14,0,0,171,30,1,0,0,0,172,173,5,47,
        0,0,173,174,5,47,0,0,174,178,1,0,0,0,175,177,8,5,0,0,176,175,1,0,
        0,0,177,180,1,0,0,0,178,176,1,0,0,0,178,179,1,0,0,0,179,181,1,0,
        0,0,180,178,1,0,0,0,181,182,6,15,0,0,182,32,1,0,0,0,183,184,5,43,
        0,0,184,34,1,0,0,0,185,186,5,45,0,0,186,36,1,0,0,0,187,188,5,42,
        0,0,188,38,1,0,0,0,189,190,5,47,0,0,190,40,1,0,0,0,191,192,5,37,
        0,0,192,42,1,0,0,0,193,194,5,61,0,0,194,44,1,0,0,0,195,196,5,61,
        0,0,196,197,5,61,0,0,197,46,1,0,0,0,198,199,5,33,0,0,199,200,5,61,
        0,0,200,48,1,0,0,0,201,202,5,60,0,0,202,50,1,0,0,0,203,204,5,62,
        0,0,204,52,1,0,0,0,205,206,5,38,0,0,206,207,5,38,0,0,207,54,1,0,
        0,0,208,209,5,124,0,0,209,210,5,124,0,0,210,56,1,0,0,0,211,212,5,
        33,0,0,212,58,1,0,0,0,213,214,5,46,0,0,214,60,1,0,0,0,215,216,5,
        40,0,0,216,62,1,0,0,0,217,218,5,41,0,0,218,64,1,0,0,0,219,220,5,
        123,0,0,220,66,1,0,0,0,221,222,5,125,0,0,222,68,1,0,0,0,223,224,
        5,59,0,0,224,70,1,0,0,0,225,226,5,44,0,0,226,72,1,0,0,0,10,0,129,
        134,139,145,151,153,162,168,178,1,6,0,0
    ]

class MyLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    BOOL = 10
    INT = 11
    FLOAT = 12
    STRING = 13
    ID = 14
    WS = 15
    LINE_COMMENT = 16
    PLUS = 17
    MINUS = 18
    MUL = 19
    DIV = 20
    MOD = 21
    ASSIGN = 22
    EQ = 23
    NEQ = 24
    LT = 25
    GT = 26
    AND = 27
    OR = 28
    NOT = 29
    DOT = 30
    LPAREN = 31
    RPAREN = 32
    LBRACE = 33
    RBRACE = 34
    SEMI = 35
    COMMA = 36

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'read'", "'write'", "'if'", "'else'", "'while'", "'int'", "'float'", 
            "'bool'", "'string'", "'+'", "'-'", "'*'", "'/'", "'%'", "'='", 
            "'=='", "'!='", "'<'", "'>'", "'&&'", "'||'", "'!'", "'.'", 
            "'('", "')'", "'{'", "'}'", "';'", "','" ]

    symbolicNames = [ "<INVALID>",
            "BOOL", "INT", "FLOAT", "STRING", "ID", "WS", "LINE_COMMENT", 
            "PLUS", "MINUS", "MUL", "DIV", "MOD", "ASSIGN", "EQ", "NEQ", 
            "LT", "GT", "AND", "OR", "NOT", "DOT", "LPAREN", "RPAREN", "LBRACE", 
            "RBRACE", "SEMI", "COMMA" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "BOOL", "INT", "FLOAT", "STRING", "ID", 
                  "WS", "LINE_COMMENT", "PLUS", "MINUS", "MUL", "DIV", "MOD", 
                  "ASSIGN", "EQ", "NEQ", "LT", "GT", "AND", "OR", "NOT", 
                  "DOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "SEMI", 
                  "COMMA" ]

    grammarFileName = "MyLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


